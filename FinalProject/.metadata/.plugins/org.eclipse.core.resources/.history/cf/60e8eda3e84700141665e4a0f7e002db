package station;

import java.util.Queue;

import thread.TicketingHelper;
import client.Client;

public abstract class Station {
	public String stationName;
	public Queue<Client> platformQueue;
	public Queue<Client> waitTicketingQueue;
	
	TicketingHelper ticketingHelper1 = new TicketingHelper();
	TicketingHelper ticketingHelper2 = new TicketingHelper();
	TicketingHelper ticketingHelper3 = new TicketingHelper();
	
	Client nowTicketingClient1;
	Client nowTicketingClient2;
	Client nowTicketingClient3;
	
	public void ticketingStart()
	{
		
		if(nowTicketingClient1.getTicket())
		{
			platformQueue.add(nowTicketingClient);
		}
		
		
		
		
		
		
		
		
		
		
		
		if(!ticketingHelper1.getNowTicketing())
		{
			if(!waitTicketingQueue.isEmpty()){
			nowTicketingClient1 = waitTicketingQueue.poll();
			ticketingHelper1.newClient(nowTicketingClient1);
			Thread th1 = new Thread(ticketingHelper1);
			th1.start();
			}
		}
		
		if(!ticketingHelper2.getNowTicketing())
		{
			if(!waitTicketingQueue.isEmpty()){
			ticketingHelper2.newClient(waitTicketingQueue.poll());
			Thread th2 = new Thread(ticketingHelper2);
			th2.start();
			}
		}
		
		if(!ticketingHelper3.getNowTicketing())
		{
			if(!waitTicketingQueue.isEmpty()){
			ticketingHelper3.newClient(waitTicketingQueue.poll());
			Thread th3 = new Thread(ticketingHelper3);
			th3.start();
			}
		}
		
	}
	
}
